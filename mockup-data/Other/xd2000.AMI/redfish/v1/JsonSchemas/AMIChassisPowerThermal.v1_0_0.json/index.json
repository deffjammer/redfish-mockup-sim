{
    "$ref": "#/definitions/AMIChassisPowerThermal",
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema.v1_1_0.json",
    "definitions": {
        "AMIChassisPowerThermal": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/type"
                },
                "OwnerLUN": {
                    "description": "This property shall specify the LUN number of a Temperature/Fan/Voltage Sensor.",
                    "type": "number"
                },
                "PowerFloorTargetwatts": "Desired minimum power consumption target for resource in watts.",
                "PowerIdeWatts": "The measured minimum power that a node needs to operate when idle and active (i.e., not in a deep sleep state).",
                "PowerLimit": {
                    "Factor": "The amount to adjust the LimitInWatts by to equalize node-to-node performance variation. The value may be derived by any means. Default value is 1.0. BMC vendors not wanting to implement this feature can use the default at all times.",
                    "MAX": "Largest value allowed (least restrictive) power limit in watts.",
                    "Min": "Smallest value allowed (most restrictive) power limit in watts.",
                    "description": "Value allowed (restrictive) power limit in watts."
                },
                "PowerMetrics": {
                    "AccumulateEnergyJoules": "Get node accumulated energy in current time epoch.",
                    "Timestamp": "Set node accumulated energy epoch timestamp.",
                    "description": "Node level power average sample interval"
                },
                "PowerResetWatts": "Node power consumed during initialization."
            },
            "type": "object"
        }
    },
    "title": "#AMIChassisPowerThermal.v1_0_0.AMIChassisPowerThermal"
}